"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3899],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=c(n),y=a,h=l["".concat(o,".").concat(y)]||l[y]||d[y]||s;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=y;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[l]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},5058:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const s={title:"Type Predicates",description:"How to use type predicates",tags:["typescript"],keywords:["typescript"],last_update:{date:new Date("2023-02-24T00:00:00.000Z")}},i=void 0,p={unversionedId:"typescript/type-predicates",id:"typescript/type-predicates",title:"Type Predicates",description:"How to use type predicates",source:"@site/docs/typescript/05-type-predicates.md",sourceDirName:"typescript",slug:"/typescript/type-predicates",permalink:"/docusaurus/docs/typescript/type-predicates",draft:!1,editUrl:"https://milkcoke.github.io/docusaurus/docs/docs/typescript/05-type-predicates.md",tags:[{label:"typescript",permalink:"/docusaurus/docs/tags/typescript"}],version:"current",lastUpdatedAt:1677196800,formattedLastUpdatedAt:"Feb 24, 2023",sidebarPosition:5,frontMatter:{title:"Type Predicates",description:"How to use type predicates",tags:["typescript"],keywords:["typescript"],last_update:{date:"2023-02-24T00:00:00.000Z"}},sidebar:"tutorialSidebar",previous:{title:"Type Guards",permalink:"/docusaurus/docs/typescript/type-graurds"},next:{title:"Discriminate property",permalink:"/docusaurus/docs/typescript/discriminate-property"}},o={},c=[{value:"Why to use",id:"why-to-use",level:2},{value:"When to use",id:"when-to-use",level:2},{value:"How to use (example)",id:"how-to-use-example",level:2},{value:"instanceof.ts",id:"instanceofts",level:4},{value:"type-predicates.ts",id:"type-predicatests",level:4},{value:"Questions",id:"questions",level:2},{value:"Answer",id:"answer",level:2}],u={toc:c};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"why-to-use"},"Why to use"),(0,a.kt)("p",null,"Complex data type checking (e.g. interface, object array, class, prototype, property based check) ",(0,a.kt)("br",null),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"instanceof")," keyword is only useful when checking type of class or prototype. ",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Whereas type predicates make you provide the type to typescript compiler.")),(0,a.kt)("h2",{id:"when-to-use"},"When to use"),(0,a.kt)("p",null,"interface, property or character based type checking on complex type."),(0,a.kt)("h2",{id:"how-to-use-example"},"How to use (example)"),(0,a.kt)("p",null,"Type predicates signature: ",(0,a.kt)("inlineCode",{parentName:"p"},"arg name")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"Type")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface Square {\n    kind: 'square';\n    length: number;\n}\n\ninterface Rectangle {\n    kind: 'rectangle';\n    width: number;\n    height: number;\n}\n\nclass Triangle {\n    kind: string = 'triangle';\n    constructor(public baseLength: number, public height: number) {\n    }\n}\n\ntype Shape = Square | Rectangle | Triangle;\n\nfunction isSquare(shape: Shape): shape is Square {\n    return shape.kind === 'square';\n}\n\nfunction isRectangle(shape: Shape): shape is Rectangle {\n    return shape.kind === 'rectangle';\n}\n")),(0,a.kt)("h4",{id:"instanceofts"},"instanceof.ts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"function getSize(shape: Shape) {\n    // Can't use `instanceof` for instance.\n    // \ud83d\udeab Error occurs because `instanceof` just valid in class, prototype\n    if (shape instanceof Square) {\n    }\n}\n")),(0,a.kt)("h4",{id:"type-predicatests"},"type-predicates.ts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"function getSize(shape: Shape) {\n    // Can't use `instanceof` for instance.\n    // just valid in class, prototype\n    // if (shape instanceof Square) \n\n    if (isSquare(shape)) {\n        return shape.length * shape.length;\n    } else if (isRectangle(shape)) {\n        return shape.width * shape.height;\n    } else {\n        return shape.baseLength * shape.height * 0.5;\n    }\n}\n\nconst squaure1: Square = {\n    kind: 'square',\n    length: 5\n}\nconsole.log(getSize(squaure1));\n")),(0,a.kt)("h2",{id:"questions"},"Questions"),(0,a.kt)("p",null,"You may have questions like this."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("em",{parentName:"p"},"However, Does type predicates make developers write more code according to increasing the number of interface, class etc.. ? "))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sure"),", In this example, More shape type is added, you should add type checking function with type predicates. ",(0,a.kt)("br",null),"\nBut we have to think about why we use Typescript instead of Javascript.\nWe want help of type checker powered by typescript, so reduce risk of runtime error!"),(0,a.kt)("h2",{id:"answer"},"Answer"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"The benefits of increased type safety and reduced risk of runtime errors can outweigh this cost"),", although using type predicates may require some additional effort in defining and maintaining the codes."))}l.isMDXComponent=!0}}]);