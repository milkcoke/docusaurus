"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5072],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>v});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),c=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},p=function(t){var e=c(t.components);return a.createElement(s.Provider,{value:e},t.children)},m="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,s=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),m=c(n),d=r,v=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(v,l(l({ref:e},p),{},{components:n})):a.createElement(v,l({ref:e},p))}));function v(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[m]="string"==typeof t?t:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8498:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={title:"const vs val",description:"Compare const to val",tags:["kotlin"],last_update:{date:new Date("2023-01-11T00:00:00.000Z")}},l=void 0,i={unversionedId:"kotlin/syntax/const-vs-val",id:"kotlin/syntax/const-vs-val",title:"const vs val",description:"Compare const to val",source:"@site/docs/kotlin/01-syntax/05-const-vs-val.md",sourceDirName:"kotlin/01-syntax",slug:"/kotlin/syntax/const-vs-val",permalink:"/docusaurus/docs/kotlin/syntax/const-vs-val",draft:!1,editUrl:"https://milkcoke.github.io/docusaurus/docs/docs/kotlin/01-syntax/05-const-vs-val.md",tags:[{label:"kotlin",permalink:"/docusaurus/docs/tags/kotlin"}],version:"current",lastUpdatedAt:1673395200,formattedLastUpdatedAt:"2023\ub144 1\uc6d4 11\uc77c",sidebarPosition:5,frontMatter:{title:"const vs val",description:"Compare const to val",tags:["kotlin"],last_update:{date:"2023-01-11T00:00:00.000Z"}},sidebar:"tutorialSidebar",previous:{title:"Pair and Triple in Kotlin",permalink:"/docusaurus/docs/kotlin/syntax/Pair-Triple"},next:{title:"Backing property",permalink:"/docusaurus/docs/kotlin/syntax/Backing-Property"}},s={},c=[{value:"<code>const</code>",id:"const",level:2},{value:"<code>val</code>",id:"val",level:2},{value:"Example code",id:"example-code",level:3},{value:"\ud83d\udcddConclusion",id:"conclusion",level:2}],p={toc:c};function m(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"const"},(0,r.kt)("inlineCode",{parentName:"h2"},"const")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"const")," keyword is used to declare properties that are ",(0,r.kt)("strong",{parentName:"p"},"immutable")," (i.e. ",(0,r.kt)("strong",{parentName:"p"},"read-only")," properties) at the ",(0,r.kt)("strong",{parentName:"p"},"compile time"),"."),(0,r.kt)("p",null,"When to use ",(0,r.kt)("inlineCode",{parentName:"p"},"const"),", required conditions as shown below:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Should start from a primitive data type ",(0,r.kt)("br",null),"\nex) Boolean, Int, Long, Char, String"),(0,r.kt)("li",{parentName:"ol"},"Must be at the top level or member of an object or a companion object"),(0,r.kt)("li",{parentName:"ol"},"No custom getter method")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'class Task (_name: String, _priority: Int = DEFAULT_PRIORITY) {\n    companion object {\n        const val MIN_PRIORITY = 1\n        const val DEFAULT_PRIORITY = 3\n        const val MAX_PRIORITY = 5\n        const val NAME = "KHAZIX"\n//        highlight-next-line\n        const val TASK_INDEX_NAMES = Array<String>(5){i->"task $i"} // error occurs\n    }\n}\n')),(0,r.kt)("p",null,"This code must lead to following error:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"Const 'val' has type 'Array<String>'. \n    Only primitives and String are allowed\n")),(0,r.kt)("h2",{id:"val"},(0,r.kt)("inlineCode",{parentName:"h2"},"val")),(0,r.kt)("p",null,"Initialized at runtime. As a result, you may assign a val variable a method or class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'class Task(_name: String, _priority: Int = DEFAULT_PRIORITY){\n    companion object {\n        const val MIN_PRIORITY = 1\n        const val DEFAULT_PRIORITY = 3\n        const val MAX_PRIORITY = 5\n        // highlight-start\n        val currentTimeStamp: LocalDateTime\n            get() = LocalDateTime.now()\n        // highlight-end\n    }\n    \n    private fun setNameWithTimestamp(_name : String) = _name + "_" + currentTimeStamp\n    private fun validPriority(p: Int) = p.coerceIn(MIN_PRIORITY, MAX_PRIORITY)\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"currentTimestamp")," declared with ",(0,r.kt)("inlineCode",{parentName:"p"},"val")," is allocated in runtime. You are able to declare custom get method."),(0,r.kt)("h3",{id:"example-code"},"Example code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'class Task(_name: String, _priority: Int = DEFAULT_PRIORITY){\n    companion object {\n        const val MIN_PRIORITY = 1\n        const val DEFAULT_PRIORITY = 3\n        const val MAX_PRIORITY = 5\n        val currentTimeStamp: LocalDateTime\n            get() = LocalDateTime.now()\n    }\n    var currentPriority = validPriority(_priority)\n        set(value) {\n            field = validPriority(value)\n        }\n\n    // custom setter\n    var name = setNameWithTimestamp(_name)\n        set(value) {\n            field = setNameWithTimestamp(value)\n        }\n\n    private fun setNameWithTimestamp(_name : String) = _name + "_" + currentTimeStamp\n    private fun validPriority(p: Int) = p.coerceIn(MIN_PRIORITY, MAX_PRIORITY)\n\n}\n')),(0,r.kt)("h2",{id:"conclusion"},"\ud83d\udcddConclusion"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Index"),(0,r.kt)("th",{parentName:"tr",align:null},"const"),(0,r.kt)("th",{parentName:"tr",align:null},"val"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"When to use")),(0,r.kt)("td",{parentName:"tr",align:null},"Variable value to remain constant"),(0,r.kt)("td",{parentName:"tr",align:null},"Control variable with custom method")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Declaration time")),(0,r.kt)("td",{parentName:"tr",align:null},"Compile"),(0,r.kt)("td",{parentName:"tr",align:null},"Runtime")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Data type")),(0,r.kt)("td",{parentName:"tr",align:null},"Primitive and String"),(0,r.kt)("td",{parentName:"tr",align:null},"All")))))}m.isMDXComponent=!0}}]);