"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1274],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),m=o,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||a;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8318:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={title:"Type Guards",description:"How to use type guard for writing safe code",tags:["typescript"],keywords:["typescript"],last_update:{date:new Date("2023-02-22T00:00:00.000Z")}},i=void 0,s={unversionedId:"typescript/type-graurds",id:"typescript/type-graurds",title:"Type Guards",description:"How to use type guard for writing safe code",source:"@site/docs/typescript/04-type-graurds.md",sourceDirName:"typescript",slug:"/typescript/type-graurds",permalink:"/docusaurus/docs/typescript/type-graurds",draft:!1,editUrl:"https://milkcoke.github.io/docusaurus/docs/docs/typescript/04-type-graurds.md",tags:[{label:"typescript",permalink:"/docusaurus/docs/tags/typescript"}],version:"current",lastUpdatedAt:1677024e3,formattedLastUpdatedAt:"Feb 22, 2023",sidebarPosition:4,frontMatter:{title:"Type Guards",description:"How to use type guard for writing safe code",tags:["typescript"],keywords:["typescript"],last_update:{date:"2023-02-22T00:00:00.000Z"}},sidebar:"tutorialSidebar",previous:{title:"Enum",permalink:"/docusaurus/docs/typescript/enum"},next:{title:"Type Predicates",permalink:"/docusaurus/docs/typescript/type-predicates"}},l={},p=[{value:"Type guard",id:"type-guard",level:2},{value:"Truthiness guards",id:"truthiness-guards",level:2},{value:"<code>In</code> operator",id:"in-operator",level:2},{value:"instanceof",id:"instanceof",level:2},{value:"Pros and Cons",id:"pros-and-cons",level:3},{value:"Pros",id:"pros",level:4},{value:"Cons",id:"cons",level:4},{value:"When to use",id:"when-to-use",level:3}],u={toc:p};function c(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You are capable of writing safe code with type guard in typescript."),(0,o.kt)("h2",{id:"type-guard"},"Type guard"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function repeatThree(value: number | string) {\n    // type narrowing is required.\n    if (typeof value === \"string\") {\n        return value.repeat(3) // error occurs since number doesn't have repeat() method.\n    }\n\n    return value * 3\n}\n\nconsole.log(repeatThree('hi')); // hihihi\nconsole.log(repeatThree(3)); // 9\n")),(0,o.kt)("h2",{id:"truthiness-guards"},"Truthiness guards"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function printIfTruthNum(value: string | number | undefined | null) {\n    if (typeof value === \"number\") {\n        // console.log(`number: ${value}`)\n        logger.warn(`number:${value}`);\n    } else if (!value) {\n        console.error('this is falsy')\n    } else {\n        console.log(value)\n    }\n}\n\nprintIfTruthNum(0); // number: 0\nprintIfTruthNum(null); // this is falsy\nprintIfTruthNum('champ'); // champ\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Take care of that number ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," is also ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Glossary/Falsy"},"Falsy value"))),(0,o.kt)("h2",{id:"in-operator"},(0,o.kt)("inlineCode",{parentName:"h2"},"In")," operator"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"in")," operator is type narrowing checking property existence in object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface Movie {\n    title: string;\n    duration: number;\n}\n\ninterface TVShow {\n    title: string;\n    numOfEpisodes: number;\n    episodesDuration: number;\n}\n\nfunction getRuntime(media: Movie | TVShow) : number {\n    // media is type narrowed to `TVShow`\n    // highlight-next-line\n    if ('episodesDuration' in media) {\n        return media.numOfEpisodes * media.episodesDuration;\n    } else{\n    // media is type narrowed to `Movie`\n        return media.duration;\n    }\n}\n\nconst movie1 = {title: 'Khazix', duration: 140}\nconst tvShow1 = {title: 'Vladimir', numOfEpisodes: 20, episodesDuration: 10}\nconsole.log(getRuntime(movie1)); // 140\nconsole.log(getRuntime(tvShow1)) // 200 (20 * 10)\n")),(0,o.kt)("h2",{id:"instanceof"},"instanceof"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"instanceof")," is a javascript operator that allow us to check if an instance of another prototype(class)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface IUser {\n    name: string;\n}\n\n// https://timmousk.com/blog/typescript-instanceof-interface/\n\nclass RiotUser implements IUser {\n    constructor(public readonly name: string, readonly riotId: string = \"RID: \" + name) {\n    }\n}\n\nclass NexonUser implements IUser {\n    constructor(public readonly name: string, readonly nexonId: string = \"NID: \" + name) {\n    }\n}\n\nconst riotUser = new RiotUser('riot1');\nconst nexonUser = new NexonUser('nexon1');\n\nfunction printUserName(user: IUser) {\n    \n    if (user instanceof RiotUser) {\n        console.log(user.name); // riot1\n        console.log(user.riotId); // RID: riot1\n    }\n\n    if (user instanceof NexonUser) {\n        console.log(user.name); // nexon1\n        console.log(user.nexonId); // NID: nexon1\n    }\n}\n\nprintUserName(riotUser); // \nprintUserName(nexonUser);\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Don't use this when checking interface.",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"instanceof")," type narrowing is only allowed to prototype (class). ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function printUserName(user: IUser) {\n    // \ud83d\udeab using instanceof to interface is not allowed since interface is just type.\n    // if (user instanceof IUser) { \n    // \n    // }\n}\n")),(0,o.kt)("p",null,"Above code must lead to error."),(0,o.kt)("h3",{id:"pros-and-cons"},"Pros and Cons"),(0,o.kt)("p",null,"Using ",(0,o.kt)("inlineCode",{parentName:"p"},"instanceof")," have trade-off. ",(0,o.kt)("br",null),"\nIt might be a sign that your class hierarchy could be refactored to be more cohesive and have fewer dependencies on external state."),(0,o.kt)("h4",{id:"pros"},"Pros"),(0,o.kt)("p",null,"Reduce code duplication"),(0,o.kt)("h4",{id:"cons"},"Cons"),(0,o.kt)("p",null,"Difficult to modify the implementation of each class. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"instanceof")," code could break Open-Closed-Principal (OCP) because additional class added, that code should be modified."),(0,o.kt)("h3",{id:"when-to-use"},"When to use"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"instanceof")," All classes are independent on external state and methods are implemented in a similar way across all classes. ",(0,o.kt)("br",null),"\nDon't use when modification is important.")))}c.isMDXComponent=!0}}]);