"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6573],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(n),k=i,f=p["".concat(s,".").concat(k)]||p[k]||d[k]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=k;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[p]="string"==typeof e?e:i,l[1]=a;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},6742:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={title:"File IO",tags:["kotlin"],keywords:["kotlin"],last_update:{date:new Date("2023-02-11T00:00:00.000Z")}},l=void 0,a={unversionedId:"kotlin/fileio/file-use",id:"kotlin/fileio/file-use",title:"File IO",description:"WriteText.kt",source:"@site/docs/kotlin/03-fileio/01-file-use.md",sourceDirName:"kotlin/03-fileio",slug:"/kotlin/fileio/file-use",permalink:"/docusaurus/docs/kotlin/fileio/file-use",draft:!1,editUrl:"https://milkcoke.github.io/docusaurus/docs/docs/kotlin/03-fileio/01-file-use.md",tags:[{label:"kotlin",permalink:"/docusaurus/docs/tags/kotlin"}],version:"current",lastUpdatedAt:1676073600,formattedLastUpdatedAt:"Feb 11, 2023",sidebarPosition:1,frontMatter:{title:"File IO",tags:["kotlin"],keywords:["kotlin"],last_update:{date:"2023-02-11T00:00:00.000Z"}},sidebar:"tutorialSidebar",previous:{title:"FileIO",permalink:"/docusaurus/docs/category/fileio"},next:{title:"Nesting vs Chaining",permalink:"/docusaurus/docs/kotlin/fileio/nesting-vs-chaining"}},s={},c=[{value:"WriteText.kt",id:"writetextkt",level:3},{value:"WriteText.kt",id:"writetextkt-1",level:3},{value:"Closable.kt",id:"closablekt",level:4},{value:"PrintWriter.java",id:"printwriterjava",level:4},{value:"WriteTextWithUse.kt",id:"writetextwithusekt",level:3}],u={toc:c};function p(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"writetextkt"},"WriteText.kt"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'const val TARGET_FILE_PATH = "kotorial_target.txt"\n\nfun main() {\n    val workingDirectory = System.getProperty("user.dir")\n\n    File(workingDirectory)\n        .resolve(TARGET_FILE_PATH)\n        .appendText("\\n") // return type \'Unit\'\n        // \u274c Error occurs\n        // highlight-next-line\n        .appendText("\ubd99\uc5ec\ub123\uae30", Charset.defaultCharset())\n}\n')),(0,i.kt)("h3",{id:"writetextkt-1"},"WriteText.kt"),(0,i.kt)("p",null,"Use apply for return itself. ",(0,i.kt)("br",null),"\nYou can do method chaining even though it's not builder pattern class."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'const val TARGET_FILE_PATH = "kotorial_target.txt"\n\nfun main() {\n    val workingDirectory = System.getProperty("user.dir")\n\n    File(workingDirectory)\n        .resolve(TARGET_FILE_PATH)\n        .apply {\n            appendText("\\n")\n            appendText("\ubd99\uc5ec\ub123\uae30", Charset.defaultCharset())\n        }\n}\n')),(0,i.kt)("h4",{id:"closablekt"},"Closable.kt"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'/**\n * Executes the given [block] function on this resource and then closes it down correctly whether an exception\n * is thrown or not.\n *\n * @param block a function to process this [Closeable] resource.\n * @return the result of [block] function invoked on this resource.\n */\n@InlineOnly\n@RequireKotlin("1.2", versionKind = RequireKotlinVersionKind.COMPILER_VERSION, message = "Requires newer compiler version to be inlined correctly.")\npublic inline fun <T : Closeable?, R> T.use(block: (T) -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    var exception: Throwable? = null\n    try {\n        // highlight-next-line\n        return block(this) // can be chained.\n    }\n    // ..\n}\n')),(0,i.kt)("h4",{id:"printwriterjava"},"PrintWriter.java"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class PrintWriter extends Writer {\n    // ..\n    public PrintWriter append(CharSequence csq) {\n        write(String.valueOf(csq));\n        return this;\n    }\n}\n")),(0,i.kt)("h3",{id:"writetextwithusekt"},"WriteTextWithUse.kt"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'\nfun main() {\n    val workingDirectory = System.getProperty("user.dir")\n    \n    File(workingDirectory)\n        .resolve(TARGET_FILE_PATH)\n        .printWriter() // return PrintWriter\n        // public inline fun <T : Closeable?, R> T.use(block: (T) -> R): R\n        // T: PrintWriter\n        .use {  // writer is PrintWriter\n            it\n              .appendLine()\n              .append("\ubd99\uc5ec\ub123\uae30") // append return itself\n        }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Chaining_Use",src:n(6126).Z,width:"1030",height:"450"})))}p.isMDXComponent=!0},6126:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/chained_printwriter-b40762e7ee58a29d349d174de33bed72.png"}}]);