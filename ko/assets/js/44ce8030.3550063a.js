"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3069],{6009:e=>{e.exports=JSON.parse('{"label":"typescript","permalink":"/docusaurus/ko/docs/tags/typescript","allTagsPath":"/docusaurus/ko/docs/tags","count":9,"items":[{"id":"typescript/discriminate-property","title":"Discriminate property","description":"How to discriminate type using literal type","permalink":"/docusaurus/ko/docs/typescript/discriminate-property"},{"id":"typescript/enum","title":"Enum","description":"Don\'t use enum, use literal type","permalink":"/docusaurus/ko/docs/typescript/enum"},{"id":"typescript/tuple-type","title":"Tuple","description":"How to use tuple type in typescript","permalink":"/docusaurus/ko/docs/typescript/tuple-type"},{"id":"typescript/type-declaration","title":"Type declaration","description":"How to use .d.ts file?","permalink":"/docusaurus/ko/docs/typescript/type-declaration"},{"id":"typescript/type-graurds","title":"Type Guards","description":"How to use type guard for writing safe code","permalink":"/docusaurus/ko/docs/typescript/type-graurds"},{"id":"typescript/type-predicates","title":"Type Predicates","description":"How to use type predicates","permalink":"/docusaurus/ko/docs/typescript/type-predicates"},{"id":"typescript/union-type","title":"Union type & Literal type","description":"How to use union type and type narrowing in typescript.","permalink":"/docusaurus/ko/docs/typescript/union-type"},{"id":"typescript/generic-type","title":"Use generic instead of `any`","description":"When and Why need generic type","permalink":"/docusaurus/ko/docs/typescript/generic-type"},{"id":"typescript/switch-case-tip","title":"Why should we use `never` in switch case in typescript","description":"How to use switch - case safely in typescript","permalink":"/docusaurus/ko/docs/typescript/switch-case-tip"}]}')}}]);