"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5754],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(r),y=p,f=u["".concat(s,".").concat(y)]||u[y]||d[y]||o;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function f(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var o=r.length,a=new Array(o);a[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:p,a[1]=i;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},5349:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),p=(r(7294),r(3905));const o={title:"Tuple",description:"How to use tuple type in typescript",tags:["typescript"],keywords:["typescript"],last_update:{date:new Date("2023-02-21T00:00:00.000Z")}},a=void 0,i={unversionedId:"typescript/tuple-type",id:"typescript/tuple-type",title:"Tuple",description:"How to use tuple type in typescript",source:"@site/docs/typescript/02-tuple-type.md",sourceDirName:"typescript",slug:"/typescript/tuple-type",permalink:"/docusaurus/ko/docs/typescript/tuple-type",draft:!1,editUrl:"https://milkcoke.github.io/docusaurus/docs/docs/typescript/02-tuple-type.md",tags:[{label:"typescript",permalink:"/docusaurus/ko/docs/tags/typescript"}],version:"current",lastUpdatedAt:1676937600,formattedLastUpdatedAt:"2023\ub144 2\uc6d4 21\uc77c",sidebarPosition:2,frontMatter:{title:"Tuple",description:"How to use tuple type in typescript",tags:["typescript"],keywords:["typescript"],last_update:{date:"2023-02-21T00:00:00.000Z"}},sidebar:"tutorialSidebar",previous:{title:"Union type & Literal type",permalink:"/docusaurus/ko/docs/typescript/union-type"}},s={},l=[{value:"Tuple type",id:"tuple-type",level:2},{value:"Use type, interface instead of tuple",id:"use-type-interface-instead-of-tuple",level:4},{value:"\ud83d\udd17 Reference",id:"-reference",level:3}],c={toc:l};function u(e){let{components:t,...r}=e;return(0,p.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h2",{id:"tuple-type"},"Tuple type"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Array type fixed length and order.")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"type RGBColor = [number, number, number];\nconst rgb1: RGBColor = [102, 104, 230, 403]; // \ud83d\udeab not matched length\nconst rgb2: RGBColor = [102, 104, true]; // \ud83d\udeab not matched type\nconst rgb3: RGBColor = [102, 104, 230]; // \u2705\n\n\n// But after initialized, let it go append or pop since js/ts opened.\nrgb1.push(204);\nrgb1.pop();\nrgb1.pop();\n")),(0,p.kt)("admonition",{type:"info"},(0,p.kt)("p",{parentName:"admonition"},"This is not recommended since it's not flexible and maintainable. ",(0,p.kt)("br",null),"\n",(0,p.kt)("strong",{parentName:"p"},"Use interface, type or class to define custom data type instead of tuple."))),(0,p.kt)("h4",{id:"use-type-interface-instead-of-tuple"},"Use type, interface instead of tuple"),(0,p.kt)("p",null,"I prefer to use this"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"type RGB = {\n    r: number\n    g: number\n    b: number\n}\nconst rgb4 = {r: 102, g: 104, b: 230}\n")),(0,p.kt)("hr",null),(0,p.kt)("h3",{id:"-reference"},"\ud83d\udd17 Reference"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types"},"Typescript docs"))))}u.isMDXComponent=!0}}]);